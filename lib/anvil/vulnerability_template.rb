require 'faraday'

module Anvil
  class VulnerabilityTemplate
    attr_reader :client, :args

    def initialize(client)
      if client.class != Anvil::Client
        raise ArgumentError, "client param must be a Client class"
      end
      @client = client
    end

    def search(value)
      url = URI.parse("#{@client.base_url}/api/v2/vulnerability_templates/?value=#{value}")
      req = Net::HTTP::Get.new(url.to_s)
      res = Net::HTTP.start(url.host, url.port) { |http| http.request(req) }
      JSON.parse(res.body)
    end

    def create!(params)
      conn = Faraday.new(:url => "#{@client.base_url}")
      conn.post '/api/v2/vulnerability_templates', vulnerability_template:  params
    end
  end
end
